{"version":3,"names":[],"mappings":"","sources":["xmas.js"],"sourcesContent":["window.createjs = this.createjs = require('createjs-module');\nrequire('createjs-easeljs');\nrequire('hammerjs');\n\n\nvar KEYCODE_UP = 38; //useful keycode\nvar KEYCODE_LEFT = 37; //useful keycode\nvar KEYCODE_RIGHT = 39; //useful keycode\nvar KEYCODE_DOWN = 40; //useful keycode\nvar KEYCODE_W = 87; //useful keycode\nvar KEYCODE_S = 83; //useful keycode\nvar KEYCODE_A = 65; //useful keycode\nvar KEYCODE_D = 68; //useful keycode\n\n\nclass rocket {\n  constructor(id) {\n    this.id = id;\n    this.canvas = document.querySelector(\"#\" + id);\n    this.mc = new Hammer.Manager(this.canvas);\n    this.outer_w = window.innerWidth;\n    this.outer_h = window.innerHeight;\n    this.canvas.width = this.outer_w;\n    this.canvas.height = this.outer_h - document.querySelector('header').clientHeight;\n    this.xmasPlanet;\n    this.startBtn;\n    this.restartBtn;\n    this.giftID = 0;\n    this.gameStart = false;\n    this.gameFisnish = false;\n    // this.distance = 0;\n    this.gotGiftID = [];\n    this.gotGift = 0;\n    this.TURN_FACTOR = 5; //how far the ship turns per frame\n    this.SPEED = 18; //how far the ship turns per frame\n    this.SPEED_RATE = 0.1;\n    this.stars = [];\n    this.rocks = [];\n    this.gifts = [];\n    this.snowflake = [];\n    this.rockNumber = 2;\n    this.starNumber = 20;\n    this.giftNumber = 3;\n    this.snowflakeNumber = 6;\n    this.lfHeld = false;\n    this.rtHeld = false;\n    this.fwdHeld = false;\n    this.fsdHeld = false;\n    this.rocket;\n    // this.score = new createjs.Text(this.distance + \" light year\", \"bold 2em Oswald\", \"#FFFFFF\");\n    this.scoreGift = new createjs.Text(\"YOU HAVE \" + this.gotGift + \"GIFTS\", \"bold 2em Oswald\", \"#FFFFFF\");\n    this.stage = new createjs.Stage(this.id);\n    this.queue = new createjs.LoadQueue();\n    this.xmasPlanetQue = new createjs.LoadQueue();\n    this.btnQue = new createjs.LoadQueue();\n\n    // this.bgAudio = document.querySelector('#bg-sound');\n    // this.startAudio = document.querySelector('#start-sound');\n    // this.finishAudio = document.querySelector('#finish-sound');\n\n    this.mc.add(new Hammer.Pan());\n\n    this.queue.loadFile({\n      src: \"../img/santa-claus.png\",\n      id: \"santaClaus\"\n    });\n\n\n    this.stage.enableMouseOver(10);\n    createjs.Touch.enable(this.stage);\n\n    document.addEventListener('keydown', e => this.handleKeyDown(e));\n    document.addEventListener('keyup', e => this.handleKeyUp(e));\n    window.addEventListener('resize', e => this.resizeCanvas(e));\n    document.querySelector('#start').addEventListener('click', (e) => this.startGame(e));\n    document.querySelector('#restart').addEventListener('click', (e) => this.startGame(e));\n\n    // Load image\n    this.queue.on(\"complete\", e => {\n      var image = this.queue.getResult(\"santaClaus\");\n      this.rocket = new createjs.Bitmap(image);\n\n      // this.xmasPlanetQue.loadFile({\n      //   src: \"../img/xmas-planet.png\",\n      //   id: \"xmasPlanet\"\n      // });\n\n      // this.xmasPlanetQue.on(\"fileload\", e => {\n      //   this.xmasPlanet = new createjs.Bitmap(e.result);\n      //   this.init();\n      //   console.log('load');\n      // });\n\n      this.btnQue.loadFile({\n        src: \"../img/start-btn.png\",\n        id: \"start-btn\"\n      });\n\n      this.btnQue.on(\"fileload\", e => {\n        this.startBtn = new createjs.Bitmap(e.result);\n        this.init();\n        // console.log('btn');\n      });\n\n    });\n\n    this.mc.on('panend panleft panright panup pandown', e => this.mcSwipe(e));\n\n    createjs.Ticker.addEventListener(\"tick\", (e) => this.tick());\n  }\n\n  mcSwipe(e) {\n    if (!this.gameStart) return;\n\n    switch (e.type) {\n      case 'panleft':\n        this.lfHeld = true;\n        break;\n      case 'panright':\n        this.rtHeld = true;\n        break;\n      case 'panup':\n        this.fwdHeld = true;\n        break;\n      case 'pandown':\n        this.fsdHeld = true;\n        break;\n      case 'panend':\n        this.lfHeld = false;\n        this.rtHeld = false;\n        this.fwdHeld = false;\n        this.fsdHeld = false;\n        break;\n    }\n\n    setTimeout(() => {}, 50);\n  }\n\n  init() {\n    this.renderStar();\n    this.renderGift();\n    this.renderSnowflake(0);\n\n    var img = this.rocket.image;\n    // default 定位, 中心點\n    this.rocket.regX = img.naturalWidth / 2;\n    this.rocket.regY = img.naturalWidth / 3;\n    this.rocket.width = img.naturalWidth;\n    this.rocket.height = img.naturalHeight;\n    this.rocket.x = this.outer_w / 2;\n    this.rocket.y = this.outer_h / 2;\n\n    this.stage.addChild(this.rocket);\n    this.stage.update();\n\n    this.stage.update();\n\n    if (this.gameFisnish) {\n      document.querySelector('#finish-layer').className = 'layer';\n      // document.querySelector('#final-score').innerHTML = this.distance.toFixed(1);\n      document.querySelector('#final-scoreGift').innerHTML = this.gotGift.toFixed(0);\n    } else {\n      document.querySelector('#start-layer').className = 'layer';\n    }\n  }\n\n  gameFinish() {\n    // this.bgAudio.pause();\n    // this.finishAudio.volumn = 100;\n    // this.finishAudio.play();\n\n    // $('.card-content').removeClass('hidden');\n\n    this.stage.removeAllChildren();\n\n    this.startBtn;\n    this.restartBtn;\n    this.gameStart = false;\n    this.TURN_FACTOR = 5; //how far the ship turns per frame\n    this.SPEED = 18; //how far the ship turns per frame\n    this.SPEED_RATE = 0.1;\n    this.stars = [];\n    this.rocks = [];\n    this.giftID = 0;\n    this.gotGiftID = [];\n    this.gifts = [];\n    this.rockNumber = 5;\n    this.snowflakeNumber = 6;\n    this.starNumber = 20;\n    this.lfHeld = false;\n    this.rtHeld = false;\n    this.fwdHeld = false;\n    this.fsdHeld = false;\n    this.gameFisnish = true;\n\n    this.init();\n\n\n  }\n\n\n  gameFinishSuccess() {\n    // this.bgAudio.pause();\n    // this.finishAudio.volumn = 100;\n    // this.finishAudio.play();\n\n    $('.card-content').removeClass('hidden');\n\n    this.stage.removeAllChildren();\n\n    this.startBtn;\n    this.restartBtn;\n    this.gameStart = false;\n    this.TURN_FACTOR = 5; //how far the ship turns per frame\n    this.SPEED = 18; //how far the ship turns per frame\n    this.SPEED_RATE = 0.1;\n    this.stars = [];\n    this.rocks = [];\n    this.giftID = 0;\n    this.gotGiftID = [];\n    this.gifts = [];\n    this.rockNumber = 5;\n    this.snowflakeNumber = 6;\n    this.starNumber = 20;\n    this.lfHeld = false;\n    this.rtHeld = false;\n    this.fwdHeld = false;\n    this.fsdHeld = false;\n    this.gameFisnish = true;\n\n    this.init();\n\n  }\n\n  startGame(e) {\n    this.gameFisnish = false;\n    // this.distance = 0;\n    this.gotGift = 0;\n\n    // this.finishAudio.currentTime = 0;\n    // this.finishAudio.pause();\n    // this.startAudio = document.querySelector('#start-sound');\n    // this.startAudio.play();\n\n    // var bgaudio = document.querySelector('#bg-sound');\n    // bgaudio.currentTime = 0;\n    // bgaudio.play();\n    document.querySelector('#finish-layer').className = 'layer hidden';\n    document.querySelector('#start-layer').className = 'layer hidden';\n\n    this.gameStart = true;\n    this.stage.removeChild(this.startBtn, this.title);\n\n    // this.score.textAlign = 'left';\n    // this.score.x = 20;\n    // this.score.y = 20;\n    // this.stage.addChild(this.score);\n\n    this.scoreGift.textAlign = 'left';\n    this.scoreGift.x = 20;\n    this.scoreGift.y = 20;\n    this.stage.addChild(this.scoreGift);\n\n    this.stage.update();\n\n    this.renderRock(0);\n    this.renderGift(0);\n    this.renderSnowflake(0);\n    this.starPass();\n  }\n\n  reStartGame() {\n\n  }\n\n  resizeCanvas() {\n    var img = this.rocket.image;\n    this.rocket.regX = img.naturalWidth / 2;\n    this.rocket.regY = img.naturalWidth / 3;\n    this.rocket.x = this.outer_w / 2;\n    this.rocket.y = this.outer_h / 2;\n    this.outer_w = window.innerWidth;\n    this.outer_h = window.innerHeight;\n    this.canvas.width = this.outer_w;\n    this.canvas.height = this.outer_h - document.querySelector('header').clientHeight;\n    this.stage.update();\n  }\n\n  renderRock(i) {\n    var rockType = Math.floor(Math.random() * 6) + 1;\n    var que = new createjs.LoadQueue();\n\n    que.loadFile({\n      id: \"planet-\" + i,\n      src: \"../img/planet-\" + rockType + \".png\"\n    });\n\n    que.on(\"fileload\", e => {\n      let image = e.result;\n      this.rocks[i] = new createjs.Shape();\n      this.rocks[i].graphics.clear().beginBitmapFill(image).drawRect(0, 0, image.naturalWidth, image.naturalHeight).command;\n      this.rocks[i].radius = image.naturalHeight;\n      this.rocks[i].regX = image.naturalWidth / 2;\n      this.rocks[i].regY = 0;\n      // this.rocks[i].scaleX = 1;\n      // this.rocks[i].scaleY = 1;\n      this.rocks[i].width = image.naturalWidth;\n      this.rocks[i].height = image.naturalHeight;\n      this.rocks[i].x = Math.random() * this.outer_w;\n      this.rocks[i].y = -image.naturalHeight;\n      this.stage.addChild(this.rocks[i]);\n      this.stage.update();\n\n      this.flyItem(this.rocks[i], 'rock', i);\n    }, this);\n\n    que.on(\"complete\", e => {\n      if (i < this.rockNumber) {\n        setTimeout(() => {\n          this.renderRock(i + 1);\n        }, Math.ceil(Math.random() * 5000))\n      }\n    }, this);\n  }\n\n  renderSnowflake(i) {\n    var snowflakeType = Math.floor(Math.random() * 6) + 1;\n    var que = new createjs.LoadQueue();\n\n    que.loadFile({\n      id: \"snowflake-\" + i,\n      src: \"../img/snowflake-\" + snowflakeType + \".png\"\n    });\n\n    que.on(\"fileload\", e => {\n      let image = e.result;\n      this.snowflake[i] = new createjs.Bitmap(image);\n      var img = this.snowflake[i].image;\n      this.snowflake[i].regX = img.naturalWidth;\n      this.snowflake[i].regY = img.naturalHeight;\n      this.snowflake[i].scaleX = 1;\n      this.snowflake[i].scaleY = 1;\n      this.snowflake[i].width = img.naturalWidth;\n      this.snowflake[i].height = img.naturalWidth;\n      this.snowflake[i].x = Math.random() * this.outer_w;\n      this.snowflake[i].y = -img.naturalHeight;\n      this.stage.addChild(this.snowflake[i]);\n      this.stage.update();\n\n      this.flyItem(this.snowflake[i], 'snowflake', i);\n    }, this);\n\n    que.on(\"complete\", e => {\n      if (i < this.snowflakeNumber) {\n        setTimeout(() => {\n          this.renderSnowflake(i + 1);\n        }, Math.ceil(Math.random() * 5000))\n      }\n      // console.log('snowflake' + i);\n    }, this);\n  }\n\n  renderStar() {\n    for (var i = 0; i < this.starNumber; i++) {\n      let star = new createjs.Shape();\n      let opt = Math.random() * 1;\n      star.graphics.beginFill(\"rgba(255,255,255,\" + opt + \")\").drawCircle(0, 0, Math.random() * 10);\n      star.x = Math.random() * this.outer_w;\n      star.y = Math.random() * this.outer_h;\n      star.opacity = opt;\n      this.stage.addChild(star);\n\n      this.stars.push(star);\n    }\n    this.stage.update();\n  }\n\n  renderGift(i) {\n    console.log('renderGift');\n    var giftType = Math.floor(Math.random() * 6) + 1;\n    var que = new createjs.LoadQueue();\n\n    que.loadFile({\n      id: \"gift-\" + i,\n      src: \"../img/gift-\" + giftType + \".png\"\n    });\n\n    que.on(\"fileload\", e => {\n      this.giftID++;\n      let image = e.result;\n      this.gifts[i] = new createjs.Bitmap(image);\n      var img = this.gifts[i].image;\n      this.gifts[i].id = 'gift-' + this.giftID;\n      console.log(this.giftID);\n      this.gifts[i].regX = img.naturalWidth / 2;\n      this.gifts[i].regY = img.naturalHeight / 2;\n      this.gifts[i].scaleX = 1;\n      this.gifts[i].scaleY = 1;\n      this.gifts[i].width = img.naturalWidth;\n      this.gifts[i].height = img.naturalWidth;\n      this.gifts[i].x = Math.random() * this.outer_w;\n      this.gifts[i].y = -img.naturalHeight;\n      this.stage.addChild(this.gifts[i]);\n      this.stage.update();\n\n\n      this.flyItem(this.gifts[i], 'gift', i);\n\n    }, this);\n\n    que.on(\"complete\", e => {\n      if (i < this.giftNumber) {\n        setTimeout(() => {\n          this.renderGift(i + 1);\n        }, Math.ceil(Math.random() * 5000))\n      }\n      // console.log('gift' + i);\n    }, this);\n  }\n\n\n  starPass() {\n    var angle = this.rocket.rotation % 360 * (this.rocket.rotation % 360 < 0 ? -1 : 1);\n\n    this.stars.forEach((item, index) => {\n      if (item.y > this.outer_h + 10 || item.y < -10 || item.x > this.outer_w + 10 || item.x < -10) {\n        if (angle > 45 && angle < 135) {\n          item.x = this.outer_w + 10;\n        } else if (angle > 225 && angle < 315) {\n          item.x = -10;\n        } else {\n          item.x = Math.random() * this.outer_w;\n        }\n\n        if (angle > 315 && angle <= 360 || angle >= 0 && angle <= 45) {\n          item.y = -10;\n        } else if (angle > 45 && angle < 135 || angle > 225 && angle < 315) {\n          item.y = Math.random() * this.outer_h;\n        } else if (angle > 135 && angle < 225) {\n          item.y = this.outer_h + 10;\n        } else {\n          item.y = Math.random() * this.outer_h;\n        }\n\n      } else {\n        item.x += Math.sin(this.rocket.rotation * (Math.PI / -180)) * this.SPEED * item.opacity;\n        item.y += Math.cos(this.rocket.rotation * (Math.PI / -180)) * this.SPEED * item.opacity;\n      }\n    });\n\n    this.stage.update();\n    if (this.gameStart) {\n      setTimeout(() => {\n        this.starPass();\n      }, 50);\n    }\n    // this.starPass();\n  }\n\n  flyItem(item, type, idx) {\n    var angle = this.rocket.rotation % 360 * (this.rocket.rotation % 360 < 0 ? -1 : 1);\n    var img_h = item.height;\n    var img_w = item.width;\n    // debugger;\n    if (item.y > this.outer_h + img_h || item.y < -img_h || item.x > this.outer_w + img_w || item.x < -img_w) {\n\n      if (angle > 45 && angle < 135) {\n        item.x = this.outer_w + img_w;\n      } else if (angle > 225 && angle < 315) {\n        item.x = -img_w;\n      } else {\n        item.x = Math.random() * this.outer_w;\n      }\n\n      if (angle > 315 && angle <= 360 || angle >= 0 && angle <= 45) {\n        item.y = -img_h;\n      } else if (angle > 45 && angle < 135 || angle > 225 && angle < 315) {\n        item.y = Math.random() * this.outer_h;\n      } else if (angle > 135 && angle < 225) {\n        item.y = this.outer_h + img_h;\n      } else {\n        item.y = Math.random() * this.outer_h;\n      }\n\n      item.visible = true;\n\n      if ( type == 'gift' ) {\n        this.gotGiftID = [];\n      }\n\n    } else {\n      item.x += Math.sin(this.rocket.rotation * (Math.PI / -180)) * this.SPEED * (img_h / 300);\n      item.y += Math.cos(this.rocket.rotation * (Math.PI / -180)) * this.SPEED * (img_h / 300);\n    }\n\n\n    this.stage.update();\n\n    if (this.gameStart) {\n      setTimeout(() => {\n        this.flyItem(item);\n      }, 60);\n    }\n  }\n\n  tick(event) {\n    //handle turning\n    if (this.gameStart) {\n      if (this.fwdHeld) {\n        this.SPEED_RATE += 0.1;\n        this.SPEED += this.SPEED_RATE;\n      } else if (this.fsdHeld && this.SPEED_RATE > 0.1) {\n        this.SPEED_RATE -= 0.1;\n        this.SPEED -= this.SPEED < 1 ? 0 : this.SPEED_RATE;\n      }\n\n      if (this.lfHeld) {\n        this.rocket.rotation -= this.TURN_FACTOR;\n      } else if (this.rtHeld) {\n        this.rocket.rotation += this.TURN_FACTOR;\n      }\n\n      for (let r in this.rocks) {\n        var rock = this.rocks[r];\n        // debugger;\n        if (this.detectHit(rock)) {\n          this.gameStart = false;\n          this.gameFisnish = false;\n          this.gameFinish();\n        }\n      }\n\n      for (let k in this.gifts) {\n        var gift = this.gifts[k];\n        if (this.detectHit(gift)) {\n          gift.visible = false;\n          if ( this.gotGiftID.indexOf(gift.id) == -1 ) {\n            console.log('detect ' + gift.id);\n            this.gotGiftID.push(gift.id);\n            this.gotGift++;\n            console.log('gotGift' + this.gotGift);\n            if (this.gotGift.toFixed(0) == 4) {\n              this.gameFinishSuccess();\n            }\n          }\n          // gift.id = 0;\n        }\n      }\n\n      // this.gotGiftID = [];\n\n      // this.distance += (this.SPEED / 50);\n      // this.score.text = this.distance.toFixed(1) + \" light year\";\n      this.scoreGift.text = \"YOU HAVE \" + this.gotGift.toFixed(0) + \" GIFTS\";\n    }\n    this.stage.update();\n  }\n\n  degToRad(deg) {\n    return deg * Math.PI / 180;\n  }\n\n  detectHit(item) {\n    var cx, cy;\n    var position = item.localToLocal(100, 0, this.rocket);\n    return this.rocket.hitTest(position.x, position.y);\n  }\n\n  countDistance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\n  }\n\n\n  handleKeyDown(e) {\n    if (!e) {\n      var e = window.event;\n    }\n    switch (e.keyCode) {\n      case KEYCODE_A:\n      case KEYCODE_LEFT:\n        this.lfHeld = true;\n        return false;\n      case KEYCODE_D:\n      case KEYCODE_RIGHT:\n        this.rtHeld = true;\n        return false;\n      case KEYCODE_W:\n      case KEYCODE_UP:\n        this.fwdHeld = true;\n        return false;\n      case KEYCODE_S:\n      case KEYCODE_DOWN:\n        this.fsdHeld = true;\n        return false;\n    }\n\n    setTimeout(() => {\n      this.lfHeld = false;\n      this.rtHeld = false;\n      this.fwdHeld = false;\n      this.fsdHeld = false;\n    }, 50);\n  }\n\n  handleKeyUp(e) {\n    if (!e) {\n      var e = window.event;\n    }\n    switch (e.keyCode) {\n      case KEYCODE_A:\n      case KEYCODE_LEFT:\n        this.lfHeld = false;\n        break;\n      case KEYCODE_D:\n      case KEYCODE_RIGHT:\n        this.rtHeld = false;\n        break;\n      case KEYCODE_W:\n      case KEYCODE_UP:\n        this.fwdHeld = false;\n        break;\n      case KEYCODE_S:\n      case KEYCODE_DOWN:\n        this.fsdHeld = false;\n        break;\n    }\n  }\n\n}\n\n\nfunction renderCanvas() {\n  new rocket('rocket');\n}\n\nwindow.onload = renderCanvas();\n\n\n"],"file":"xmas.js"}